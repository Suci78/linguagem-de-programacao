/*		  
Olá
Este é o CSS do Site de Design Digital
Qualquer dúvida consulte :::http://www.w3.org/community/webed/wiki/CSS/Properties:::
*/

/* Normatização CSS */
/* 1EM - 16px gambiarra 1EM - 10px 

100% - 16px
x - 10 px
1000/16 = 62,5%

EM para fonte, padding, margem de tipografias

Larguras são porcentagem, objeto/contexto = proporcional */



body{
	font-family: 'Roboto', sans-serif;
	color: #444; /*quando 6 número são iguais pode colocar só 3*/
	line-height: 1.5; /* 1.5 = proporção, não é medida*/
	font-size: 62.5%; /*gambiarra*/
}

/* asterisco é um seletor universal */
*,*:after,*:before{
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	 box-sizing: border-box;
}

/*Serve para arrumar o tamanho dos boxes- 
problemas de soma com margin e padding
Outro truque bacana de CSS para design responsivo é 
o box-sizing border box acompanhado do seletor *.
Basicamente esta regra diz que todos os elementos agora 
levarão em conta apenas a largura e altura determinada 
sem somar este valor a borda e o padding*/

/*
Todo 'a' vem por default sublinhado, para mudar isso deve-se usar as seguintes propriedades:
text-decoration: none ==> retira o sublinhado;
text-decoration: underline ==> coloca um sublinhado;
text-decoration: overline ==> coloca um sobrelinhado;
text-decoration: underline overline ==> coloca sobre e sublinhado juntos;
text-decoration: line-through ==> coloca uma linha em cima do texto.
*/

a{
	text-decoration: none;
	font-size: 1.6em; /* 10px = 1EM, 10px/16px=1,6px*/
	color: #00CCFF;
}

a:hover{
	text-decoration: underline;
}


/*
Como estilizar o comportamento do mouse
a:link estiliza o estado UP (corresponde a situação inicial do link, isto é, o aspecto do link quando a página é carregada no browser do usuário);
a:visited estiliza o estado VISITED (é o aspecto que o link assume quando o usuário passa o ponteiro do mouse sobre o link);
a:hover estiliza o estado OVER (é o aspecto do link depois que foi visitado pelo usuário);
a:active estiliza o estado link ativo (é o aspecto do link ativo, isto é, aquele que foi clicado pelo usuário.);
*/

/*Estilos principais*/

.container{
	max-width:1128px ; /* não muda, então 1128px = 100% */
	margin: 0 auto;
}

img,video,figure,embed{
	max-width: 100%;
}

header{
	max-width: 100%;
	height: 48px;
	margin-top: 3.6em;/*36px*/
	margin-bottom: 3.6em;/*36px*/
	/* não precisa relacionar ele com o contexto pois ele é uma tag estrutural(header) e não um texto*/
}

.logo{
	float: left;
	width: 20.74%; /* 234px objeto - 1128px(100%) contexto x 100*/
}

nav{
	width: 74.47%; /* 840px objeto - 1128px contexto  */
	float: right;
}

nav ul{
	float:  right;
}
nav li{
	display: inline-block;
	font-size: 1.2em; /*12px*/
	margin-top: 1.0em;/*10px*/
	margin-left: 2.0em;/*20px*/
}

nav li a{
	color: #999;
}

.banner{
	background: url('../img/banner.jpg');
	/*.. = voltar/subir no diretório*/
	height: 450px; /* não precisa mexer nas alturas, o navegador só muda as alturas */
	margin-bottom: 4.8em;/*48px*/
	position: relative;
}

.caixa{
	position: absolute;
	top: 48px; /*= altura*/
	background: rgba(0, 0, 0, 0.6);
	width: 42.55%; /* 480px objeto - 1128px(100%) contexto  */
	padding:2.4em 1.4em 2.4em 4.0em ;
	/* top right bottom left*/
	display: center;
}

/* 
O Position não serve para diagramar a estrutura de layouts. Para isso, você utiliza a propriedade float do css. O Position vai servir para fazer coisas mais simples.
#fixed irá fixar a posição do elemento na coordenada que você definir
#relative posiciona o elemento em relação a si mesmo.
#absolute se utiliza do ponto superior esquerdo de outros elementos. Estes elementos são os parentes dele do elemento com position absolute. Mais especificamente o pai.
*/


h1{
	font-size:4.0em;/*40px*/
	color: #FFF;
	font-weight: 200 ;
	margin-top: 0;
	margin-bottom: 0;
}

.caixa p{
	font-size: 1.8em;/*18px*/
	color: #FFF;
	font-weight: 200;
}

/*Aqui é section*/

.coluna{
	width: 23.40%;/*264px- objeto - 1128px contexto x 100, em % para ficar bem ajustado em 100%*/
	float: left;
	margin-right: 2.13%; /* tanto faz % ou em para margem, mas % é melhor para evitar desencontro de colunas, 24px objeto- 1128px contexto*/
}

.coluna:last-child{
	margin-right: 0;
}

.coluna p{
	text-align: justify;
	font-size: 1.6em;/*16px*/
}

h2{
	font-size: 2.4em;/*24px*/
}

footer{
	margin-top: 2.4em;
	margin-bottom: 2.4em;
	width: 100%;
	float: leaft;
}

.footer{
	font-size: 1.0em;
	margin-bottom: 0;
}


/* Medias Queries- consulta de mídia/exceções*/

@media screen and (max-width: 1128px) /*consulta da tela- tamanho e máximo de largura*/{

.container{ 
	padding: 0 2.4em 0 2.4em; /* top right bottom left*/
	/*padding = margem interna*/ 
	}	
}

@media screen and (max-width: 768px)/*tablet*/{
	.caixa{
		width: 65%;
	}

	.coluna{
		width: 48%;/* 2 colunas + margem */
		margin-bottom: 2.4em;
		margin-right: 2% ;
	}

	/* : - comportamento */
	.coluna:nth-child(even){
		margin-right: 0;
	}

	.logo{
		margin-top: 1.2em;
		width: 25%;
	}
}

@media screen and (max-width: 718px)/*tablet vertical*/{
	.banner{
		position:relative ;
		float: left;
		margin: 0;
		height: 150px;

	}

	.caixa{
		position: relative;
		display: block;
		float: left;
		width: 100%;
		background: #000;
		margin-top: 150px;

	}

	.h1{
		font-size: 2.5em;
	}

	section{
		margin-top: 450px;
	}
}

@media screen and (max-width: 640px){

	nav{
		width: 100%;
	}

	nav ul{
		float: left;
		font-size: 0.8em;

	}

	nav li:first-child{
		margin-left: 0;
	}
}

@media screen and (max-width: 520px)/* celular */{
	.coluna{
		width: 100%;
		margin-right: 0;
	}

	.caixa{
		padding: 1.2em 2em 1.2em 2em;
		position: relative;
		display: block;
		float: left;
		width: 100%;
		background: #000;
		margin-top: 80px;

	}

	.banner{
		height: 120px;
	}

	
}